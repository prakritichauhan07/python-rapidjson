# -*- coding: utf-8 -*-
# :Project:   python-rapidjson -- Github Actions configuration
# :Created:   Fri Oct 2 06:52:59 2020 CEST
# :Author:    Martin Thoma <info@martin-thoma.de>
# :License:   MIT License
# :Copyright: © 2020 Martin Thoma
# :Copyright: © 2020, 2021 Lele Gaifax
#

# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# and
# https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Build, test and upload to PyPI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    name: All tests, on current Python
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install .

      - name: Tests
        run: |
          pytest tests

      - name: Doctests
        run: |
          make -C docs doctest -e PYTHON=$(which python3)

  debug-tests:
    name: Memory leak tests, on current debug build Python
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: deadsnakes/action@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
          debug: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install .

      - run: |
          pytest tests

  build_wheels:
    name: Build wheels on ${{matrix.arch}} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macOS-10.15
          - windows-2019
        arch:
          - auto
        include:
          - os: ubuntu-20.04
            arch: aarch64

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: docker/setup-qemu-action@v1
        if:  ${{ matrix.arch == 'aarch64' }}
        name: Set up QEMU

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.11.1
        env:
          CIBW_ARCHS_LINUX: ${{matrix.arch}}
          CIBW_TEST_REQUIRES: "pytest pytest-benchmark pytz"
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          CIBW_SKIP: "cp2* cp33* cp34* cp35* pp*"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  upload_wheels:
    name: Upload wheels
    needs: build_wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      # This has been used to test the complete workflow: given that it's not possible to
      # re-upload the same binaries (i.e. without bumping the version number), it's
      # commented out and left here just to remind that the required token already exist
      # - name: Upload to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #     repository_url: https://test.pypi.org/legacy/

      # Upload to PyPI on every tag starting with 'v'
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
